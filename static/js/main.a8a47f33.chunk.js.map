{"version":3,"sources":["assets/images/logo.svg","actions/owner.js","reducers/owner.js","reducers/index.js","store.js","components/Home/presenter.js","components/Home/index.js","components/atoms/buttons.js","components/About/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","OWNER_NAME","defaultStateOwner","ownerName","ownerNameReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","appReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Home","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","props","getOwnerName","react_default","a","createElement","className","src","logo","alt","Link","to","Component","connect","_ref","dispatch","Button","_ref$className","_ref$label","label","_ref$type","rest","objectWithoutProperties","assign","About","history","push","_this","react","buttons_Button","style","margin","onClick","goToHome","App","Switch","Route","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","BrowserRouter","basename","process","App_App","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a8a47f33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const OWNER_NAME = \"OWNER_NAME\";\n\nexport function getOwnerName() {\n  return {\n    type: OWNER_NAME,\n    payload: {\n      ownerName: \"IlyaÃ§e Regaibi\"\n    }\n  };\n}\n","import { OWNER_NAME } from \"../actions\";\n\nconst defaultStateOwner = {\n  ownerName: \"\"\n};\n\nconst ownerNameReducer = (state = defaultStateOwner, action) => {\n  switch (action.type) {\n    case OWNER_NAME:\n      return {\n        ...state,\n        ownerName: action.payload.ownerName\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ownerNameReducer;\n","import { combineReducers } from \"redux\";\n\nimport ownerNameReducer from \"./owner\";\n\nconst appReducer = combineReducers({\n  ownerNameReducer\n});\n\nexport default appReducer;\n","import { createStore } from \"redux\";\nimport appReducer from \"./reducers\";\n\nexport const store = createStore(\n  appReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","// @flow\nimport React, { Component } from \"react\";\nimport logo from \"../../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  getOwnerName: Function,\n  ownerName: string\n};\n\nexport class Home extends Component<Props> {\n  componentDidMount() {\n    this.props.getOwnerName();\n  }\n\n  render() {\n    return (\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>\n          Hello world, this is react-redux-pwa-skeleton by{\" \"}\n          {this.props.ownerName}\n        </h1>\n        {/* We can use directly the declarative \"Link\" provided by \"react-router-dom\" to naviguate in the application */}\n        {/* It's the better way to navigate in your application by the way */}\n        <Link className=\"btn btn-info\" to={\"/about\"}>\n          Go to About\n        </Link>\n      </header>\n    );\n  }\n}\n","// @flow\nimport { connect } from \"react-redux\";\nimport { Home } from \"./presenter\";\nimport { getOwnerName } from \"../../actions\";\n\nconst mapStateToProps = ({ ownerNameReducer }) => {\n  return {\n    ownerName: ownerNameReducer.ownerName\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getOwnerName: () => dispatch(getOwnerName())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React from \"react\";\n\nexport const Button = ({\n  className = null,\n  label = \"This is a button\",\n  type = \"button\",\n  ...rest\n}) => {\n  return (\n    <button className={\"btn \" + className} type={type} {...rest}>\n      {label}\n    </button>\n  );\n};\n","// @flow\n\nimport React, { Component, Fragment } from \"react\";\nimport { Button } from \"../atoms/buttons\";\nimport type { RouterHistory } from \"react-router\";\n\ntype Props = {\n  history: RouterHistory\n};\n\nexport default class About extends Component<Props> {\n  goToHome() {\n    // Here we use \"history\" wich provides several implementations for managing session history in JS\n    // push(path, [state]) - (function) Pushes a new entry onto the history stack\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h1>About Page</h1>\n        <Button\n          style={{ margin: \"auto\" }}\n          label=\"Go back to home\"\n          className=\"btn-info\"\n          onClick={() => {\n            this.goToHome();\n          }}\n        />\n      </Fragment>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport \"./css/App.css\";\nimport \"./css/buttons.css\";\n\ntype Props = {};\n\nexport default class App extends Component<Props> {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/about\" component={About} />\n          <Route component={() => <div>404 Not found </div>} />\n        </Switch>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}